version: '3.6'

services:
   zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

   broker:
     image: confluentinc/cp-kafka:7.0.1
     hostname: broker
     container_name: broker
     depends_on:
       - zookeeper
     ports:
       - "29092:29092" 
       - "9092:9092"
     environment:
       KAFKA_BROKER_ID: 1
       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0


   connect:
     image: confluentinc/cp-kafka-connect:7.0.1
     hostname: connect
     container_name: connect
     depends_on:
       - zookeeper
       - broker
     ports:
       - "8083:8083"
     environment:
       CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
       CONNECT_REST_ADVERTISED_HOST_NAME: connect
       CONNECT_REST_PORT: 8083
       CONNECT_GROUP_ID: compose-connect-group
       CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
       CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
       CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
       CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
       CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
       CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
       CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
       CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
       CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
       CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
       CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
       #CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
       #CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR,com.mongodb.kafka=DEBUG"
       CONNECT_LOG4J_ROOT_LOGLEVEL: "FATAL"
       CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=FATAL,org.reflections=FATAL,com.mongodb.kafka=FATAL"
       CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components
       CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
       CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.0.1.jar
       CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
       CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
     volumes:
       - $PWD/mongodb-kafka-connect:/usr/share/confluent-hub-components/kafka-connect-mongodb
       - $PWD/kafka/scripts:/scripts
     command:
       - bash
       - -c
       - |
         echo "Launching Kafka Connect worker"
         /etc/confluent/docker/run &
         #
         echo "Waiting for Kafka Connect to start listening on $$CONNECT_REST_ADVERTISED_HOST_NAME"
         while [ $$(curl -s -o /dev/null -w %{http_code} http://$$CONNECT_REST_ADVERTISED_HOST_NAME:$$CONNECT_REST_PORT/connectors) -ne 200 ]; do
           echo -e $$(date) "Kafka Connect listener HTTP state: "$$(curl -s -o /dev/null -w %{http_code} http://$$CONNECT_REST_ADVERTISED_HOST_NAME:$$CONNECT_REST_PORT/connectors)" (waiting for 200)"
           sleep 5 
         done
         nc -vz $$CONNECT_REST_ADVERTISED_HOST_NAME $$CONNECT_REST_PORT
         echo -e "\n--\n+> Creating Kafka Connect MongoDB sink"
         chmod 755 /scripts/sink-connect.sh
         echo -e "Permisos cambiados"
         /scripts/sink-connect.sh 
         sleep infinity
   
   producer:
     #image: librdkafka:1.7.0
     build: 
       context: ./librdkafka-producer/.
       dockerfile: Dockerfile
     depends_on:
       - zookeeper
       - broker
       - connect
       - mongodb
     hostname: producer
     container_name: producer
     privileged: true
     volumes:
       - $PWD/librdkafka-producer/conf/ld.so.conf:/etc/ld.so.conf
       - $PWD/librdkafka-producer/src:/opt/producer
       - /var/run/docker.sock:/host/var/run/docker.sock
       - /dev:/host/dev
       - /proc:/host/proc:ro
       - /boot:/host/boot:ro
       - /lib/modules:/host/lib/modules:ro
       - /usr:/host/usr:ro
       - $PWD/secrets:/opt/producer/secrets
     working_dir: /opt/producer
     command:
       - bash
       - -c
       - |
         echo "Launching librdkafka producer"
         ldconfig
         /producer_entrypoint.sh &
         echo Waiting for kafka service start...;
         while [ $$(timeout 1 bash -c 'cat < /dev/null > /dev/tcp/broker/29092' 2&>1; echo $$?) -ne 0 ];do
          sleep 1;
         done;
         echo Connected!;
         echo -e "\n--\n+> Starting kafka producer"
         /opt/producer/producer broker:29092 sysdigtopic
         sleep infinity

   mongodb:
    image: mongo:5.0.5
    hostname: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh


