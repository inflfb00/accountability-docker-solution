version: '3.6'

services:
  master:
    image: ros:mynoetic
    container_name: roscore
    volumes:
      - ./workspace:/root/workspace
      - ./src:/root/src
      - ./conf:/opt/ros/noetic/etc/ros
      - ./logs:/root/.ros/log
    expose: 
      - "11311"
    working_dir: /root/workspace
    command:
      - bash
      - -c
      - |
        /ros_entrypoint.sh
        # Create a Catkin package if it does not exist
        # Include talker and listener source code
        if [ ! -d /root/workspace/src/beginner_tutorials ]; then
           cd ./src
           catkin_create_pkg beginner_tutorials std_msgs rospy
           cp /root/src/*.py /root/workspace/src/beginner_tutorials/src
           chmod +x /root/workspace/src/beginner_tutorials/src/talker.py /root/workspace/src/beginner_tutorials/src/listener.py
           cd /root/workspace
           catkin_make
        fi
        echo -e "Starting roscore"
        #rm -rf /root/.ros/log
        roscore
        sleep infinity
        
  talker:
    image: ros:mynoetic
    container_name: talker
    restart: on-failure
    volumes:
      - ./workspace:/root/workspace
      - ./conf:/opt/ros/noetic/etc/ros
      - ./logs:/root/.ros/log
    working_dir: /root/workspace
    depends_on:
      - master
      - listener
    environment:
      ROS_MASTER_URI: http://roscore:11311
      WORKSPACE_NAME: workspace
    command:
      - bash
      - -c
      - |
        echo Waiting for roscore service to start...;
        while [ $$(timeout 1 bash -c 'cat < /dev/null > /dev/tcp/master/11311' 2&>1; echo $$?) -ne 0 ];do
          sleep 1;
        done;
        echo roscore up!;
        sleep 1
        echo -e "Starting talker"
        #rm -rf /root/.ros/log
        rosrun beginner_tutorials talker.py       

  listener:
    image: ros:mynoetic
    container_name: listener
    restart: on-failure
    volumes:
      - ./workspace:/root/workspace
      - ./conf:/opt/ros/noetic/etc/ros
      - ./logs:/root/.ros/log
    working_dir: /root/workspace
    depends_on:
      - master
    environment:
      ROS_MASTER_URI: http://roscore:11311
      WORKSPACE_NAME: workspace
    command:
      - bash
      - -c
      - |
        echo Waiting for roscore service to start...;
        while [ $$(timeout 1 bash -c 'cat < /dev/null > /dev/tcp/master/11311' 2&>1; echo $$?) -ne 0 ];do
          sleep 1;
        done;
        echo roscore up!;
        echo -e "Starting listener"
        #rm -rf /root/.ros/log  
        rosrun beginner_tutorials listener.py
        sleep infinity
